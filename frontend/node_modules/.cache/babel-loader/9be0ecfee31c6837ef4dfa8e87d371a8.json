{"ast":null,"code":"var _jsxFileName = \"/Users/zimin/Documents/GitHub/verbal_decision_analytics/frontend/src/pages/ModelsPage.js\";\nimport React, { useCallback, useContext, useState } from \"react\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { AuthContext } from \"../context/AuthContext\";\nexport const ModelsPage = () => {\n  const [models, setModels] = useState([]);\n  const {\n    loading,\n    request\n  } = useHttp();\n  const {\n    token\n  } = useContext(AuthContext);\n  const fetchModels = useCallback(async () => {}, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"\\u041C\\u043E\\u0434\\u0435\\u043B\\u0438\"));\n};","map":{"version":3,"sources":["/Users/zimin/Documents/GitHub/verbal_decision_analytics/frontend/src/pages/ModelsPage.js"],"names":["React","useCallback","useContext","useState","useHttp","AuthContext","ModelsPage","models","setModels","loading","request","token","fetchModels"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,QAAxC,QAAuD,OAAvD;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAACM,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBN,OAAO,EAAlC;AACA,QAAM;AAACO,IAAAA;AAAD,MAAUT,UAAU,CAACG,WAAD,CAA1B;AAEA,QAAMO,WAAW,GAAGX,WAAW,CAAE,YAAY,CAAE,CAAhB,EAAkB,EAAlB,CAA/B;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,CADJ;AAKH,CAXM","sourcesContent":["import React, {useCallback, useContext, useState} from \"react\";\nimport {useHttp} from \"../hooks/http.hook\";\nimport {AuthContext} from \"../context/AuthContext\";\n\nexport const ModelsPage = () => {\n    const [models, setModels] = useState([])\n    const {loading, request} = useHttp()\n    const {token} = useContext(AuthContext)\n\n    const fetchModels = useCallback( async () => {}, [])\n    return (\n        <div>\n            <h1>Модели</h1>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}