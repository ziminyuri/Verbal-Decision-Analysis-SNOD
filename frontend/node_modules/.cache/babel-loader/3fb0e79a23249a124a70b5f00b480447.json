{"ast":null,"code":"var _jsxFileName = \"/Users/zimin/Documents/GitHub/verbal_decision_analytics/frontend/src/components/TableWinners.js\";\nimport React from \"react\";\nexport const TableWinners = ({\n  model\n}) => {\n  if (!model.winners_data) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 16\n      }\n    }, \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043E\\u0442\\u0441\\u0443\\u0442\\u0441\\u0432\\u0443\\u044E\\u0442\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"highlight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, model.winners_header.map((col, index) => {\n    return /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 29\n      }\n    }, col);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, model.winners_data.map((row, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }\n    }, index + 1), row.map((col, index1) => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 37\n        }\n      }, col);\n    }));\n  }))));\n};","map":{"version":3,"sources":["/Users/zimin/Documents/GitHub/verbal_decision_analytics/frontend/src/components/TableWinners.js"],"names":["React","TableWinners","model","winners_data","winners_header","map","col","index","row","index1"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACrC,MAAI,CAACA,KAAK,CAACC,YAAX,EAAyB;AACrB,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2GAAP;AACH;;AAED,sBACI,uDACI;AAAO,IAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACE,cAAN,CAAqBC,GAArB,CAAyB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACtC,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,GAAL,CADJ;AAGH,GAJA,CADL,CADA,CADJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,KAAK,CAACC,YAAN,CAAmBE,GAAnB,CAAuB,CAACG,GAAD,EAAMD,KAAN,KAAgB;AACpC,wBACI;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,GAAG,CAAb,CADJ,EAEKC,GAAG,CAACH,GAAJ,CAAQ,CAACC,GAAD,EAAMG,MAAN,KAAiB;AACtB,0BACI;AAAI,QAAA,GAAG,EAAEA,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBH,GAAlB,CADJ;AAGH,KAJA,CAFL,CADJ;AAUH,GAXA,CADD,CAXJ,CADJ,CADJ;AA+BH,CApCM","sourcesContent":["import React from \"react\";\n\nexport const TableWinners = ({model}) => {\n    if (!model.winners_data) {\n        return <p className=\"center\">Данные отсутсвуют</p>\n    }\n\n    return (\n        <>\n            <table className=\"highlight\">\n                <thead>\n                <tr>\n                    {model.winners_header.map((col, index) => {\n                        return (\n                            <th>{col}</th>\n                        )\n                    })}\n                </tr>\n                </thead>\n\n                <tbody>\n                {model.winners_data.map((row, index) => {\n                    return (\n                        <tr key={index}>\n                            <td>{index + 1}</td>\n                            {row.map((col, index1) => {\n                                return (\n                                    <td key={index1}>{col}</td>\n                                )\n                            })}\n                        </tr>\n                    )\n                })}\n\n                </tbody>\n            </table>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}