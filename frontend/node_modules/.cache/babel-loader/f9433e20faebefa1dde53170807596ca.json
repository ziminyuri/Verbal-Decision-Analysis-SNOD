{"ast":null,"code":"import { useState, useCallback } from 'react';\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = 'GET', body, headers = {}) => {\n    setLoading(true);\n\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n        headers['Content-Type'] = 'application/json';\n      }\n\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.Message || 'Ошибка при запросе к серверу');\n      }\n\n      setLoading(false);\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n  const clearError = useCallback(() => setError(null), []);\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};","map":{"version":3,"sources":["/Users/zimin/Documents/GitHub/Verbal-Decision-Analysis-SNOD/frontend/src/hooks/http.hook.js"],"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","JSON","stringify","response","fetch","data","json","ok","Error","Message","e","message","clearError"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,WAAlB,QAAoC,OAApC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMO,OAAO,GAAGN,WAAW,CAAC,OAAOO,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAA5B,EAAkCC,OAAO,GAAG,EAA5C,KAAmD;AAC3EP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACA,UAAIM,IAAJ,EAAU;AACNA,QAAAA,IAAI,GAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAP;AACAC,QAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACH;;AAED,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAD,EAAM;AAACC,QAAAA,MAAD;AAASC,QAAAA,IAAT;AAAeC,QAAAA;AAAf,OAAN,CAA5B;AACA,YAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,8BAA1B,CAAN;AACH;;AAEDhB,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,aAAOY,IAAP;AACH,KAhBD,CAgBE,OAAOK,CAAP,EAAU;AACRjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACe,CAAC,CAACC,OAAH,CAAR;AAEA,YAAMD,CAAN;AACH;AACJ,GAxB0B,EAwBxB,EAxBwB,CAA3B;AA0BA,QAAME,UAAU,GAAGtB,WAAW,CAAC,MAAMK,QAAQ,CAAC,IAAD,CAAf,EAAuB,EAAvB,CAA9B;AAEA,SAAO;AAAEH,IAAAA,OAAF;AAAWI,IAAAA,OAAX;AAAoBF,IAAAA,KAApB;AAA2BkB,IAAAA;AAA3B,GAAP;AACH,CAjCM","sourcesContent":["import {useState, useCallback} from 'react'\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n\n    const request = useCallback(async (url, method = 'GET', body, headers = {}) => {\n        setLoading(true)\n        try {\n            if (body) {\n                body = JSON.stringify(body)\n                headers['Content-Type'] = 'application/json'\n            }\n\n            const response = await fetch(url, {method, body, headers})\n            const data = await response.json()\n\n            if (!response.ok) {\n                throw new Error(data.Message || 'Ошибка при запросе к серверу')\n            }\n\n            setLoading(false)\n\n            return data\n        } catch (e) {\n            setLoading(false)\n            setError(e.message)\n\n            throw e\n        }\n    }, [])\n\n    const clearError = useCallback(() => setError(null), [])\n\n    return { loading, request, error, clearError }\n}"]},"metadata":{},"sourceType":"module"}