{"ast":null,"code":"var _jsxFileName = \"/Users/zimin/Documents/GitHub/verbal_decision_analytics/frontend/src/pages/QuestionPage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHttp } from \"../hooks/http.hook\";\nexport const QuestionPage = () => {\n  const {\n    loading,\n    request\n  } = useHttp();\n  const [response, setResponse] = useState(''); // Зибраем данные объектов с сервера при загрузки страницы\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await request('http://127.0.0.1:8000/api/v1/model/demo/create', 'GET');\n      console.log(data);\n      setResponse(JSON.stringify(data));\n    };\n\n    fetchData();\n  }, []);\n\n  const questionHandler = async () => {\n    try {\n      console.log('Зашли'); // Добавляем в JSON ответ по новому ключу answer\n\n      console.log(response);\n      var jsonObj = JSON.parse(response);\n      console.log('1');\n      var answer = 'answer';\n      console.log('2');\n      var obj = new Object();\n      console.log('3');\n      obj[answer] = ['True'];\n      console.log('4');\n      jsonObj.push(obj);\n      console.log('5');\n      var newJsonFileContent = JSON.stringify(jsonObj);\n      console.log('Ответ: ', newJsonFileContent); //const body = response\n      //const data = await request('api/v1/question', 'POST', {})\n      //console.log('Data', data)\n    } catch (e) {}\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044C\\u0442\\u0435 \\u043D\\u0430 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card blue-grey darken-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content white-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, response.question)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: questionHandler,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, \"\\u0412\\u0430\\u0436\\u043D\\u0435\\u0435\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: questionHandler,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, \"\\u041D\\u0435\\u0442, \\u043D\\u0435 \\u0432\\u0430\\u0436\\u043D\\u0435\\u0435\"))))));\n};","map":{"version":3,"sources":["/Users/zimin/Documents/GitHub/verbal_decision_analytics/frontend/src/pages/QuestionPage.js"],"names":["React","useEffect","useState","useHttp","QuestionPage","loading","request","response","setResponse","fetchData","data","console","log","JSON","stringify","questionHandler","jsonObj","parse","answer","obj","Object","push","newJsonFileContent","e","question"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AAEA,OAAO,MAAMC,YAAY,GAAE,MAAM;AAC7B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBH,OAAO,EAAlC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAE,EAAF,CAAxC,CAF6B,CAI7B;;AACAD,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMQ,SAAS,GAAG,YAAY;AAC1B,YAAMC,IAAI,GAAG,MAAMJ,OAAO,CAAC,gDAAD,EAAmD,KAAnD,CAA1B;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEAF,MAAAA,WAAW,CAACK,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAD,CAAX;AACH,KALD;;AAOAD,IAAAA,SAAS;AACZ,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMM,eAAe,GAAG,YAAY;AAChC,QAAI;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADA,CAEA;;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,UAAIS,OAAO,GAAGH,IAAI,CAACI,KAAL,CAAWV,QAAX,CAAd;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,UAAIM,MAAM,GAAG,QAAb;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,UAAIO,GAAG,GAAG,IAAIC,MAAJ,EAAV;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAO,MAAAA,GAAG,CAACD,MAAD,CAAH,GAAc,CAAC,MAAD,CAAd;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAI,MAAAA,OAAO,CAACK,IAAR,CAAaF,GAAb;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,UAAIU,kBAAkB,GAAGT,IAAI,CAACC,SAAL,CAAeE,OAAf,CAAzB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBU,kBAAvB,EAfA,CAiBA;AACA;AACA;AACH,KApBD,CAqBA,OAAOC,CAAP,EAAU,CAAE;AACf,GAvBD;;AAwBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2GADJ,eAGI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BhB,QAAQ,CAACiB,QAAvC,CADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,OAAO,EAAET,eADb;AAEI,IAAA,QAAQ,EAAEV,OAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,eAKI;AACI,IAAA,OAAO,EAAEU,eADb;AAEI,IAAA,QAAQ,EAAEV,OAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EALJ,CAJJ,CADJ,CADJ,CAHJ,CADJ;AA0BH,CAnEM","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useHttp} from \"../hooks/http.hook\";\n\nexport const QuestionPage =() => {\n    const {loading, request} = useHttp()\n    const [response, setResponse] = useState ('')\n\n    // Зибраем данные объектов с сервера при загрузки страницы\n    useEffect(() => {\n\n        const fetchData = async () => {\n            const data = await request('http://127.0.0.1:8000/api/v1/model/demo/create', 'GET', )\n            console.log(data)\n            \n            setResponse(JSON.stringify(data));\n        };\n\n        fetchData();\n    }, []);\n\n    const questionHandler = async () => {\n        try {\n            console.log('Зашли');\n            // Добавляем в JSON ответ по новому ключу answer\n            console.log(response)\n            var jsonObj = JSON.parse(response);\n            console.log('1');\n            var answer = 'answer';\n            console.log('2');\n            var obj = new Object()\n            console.log('3');\n            obj[answer] = ['True']\n            console.log('4');\n            jsonObj.push(obj);\n            console.log('5');\n            var newJsonFileContent = JSON.stringify(jsonObj);\n            console.log('Ответ: ', newJsonFileContent);\n\n            //const body = response\n            //const data = await request('api/v1/question', 'POST', {})\n            //console.log('Data', data)\n        }\n        catch (e) {}\n    }\n    return (\n        <div>\n            <h3>Ответьте на вопрос:</h3>\n\n            <div className=\"row\">\n                <div className=\"col s12\">\n                    <div className=\"card blue-grey darken-1\">\n                        <div className=\"card-content white-text\">\n                            <span className=\"card-title\">{response.question}</span>\n                        </div>\n                        <div className=\"card-action\">\n                            <button\n                                onClick={questionHandler}\n                                disabled={loading}\n                            >Важнее</button>\n                            <button\n                                onClick={questionHandler}\n                                disabled={loading}\n                            >Нет, не важнее</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}