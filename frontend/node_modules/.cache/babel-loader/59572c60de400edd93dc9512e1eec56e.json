{"ast":null,"code":"var _jsxFileName = \"/Users/zimin/Documents/GitHub/verbal_decision_analytics/frontend/src/pages/AuthPage.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { useMessage } from '../hooks/error.hook';\nimport { AuthContext } from \"../context/AuthContext\";\nexport const AuthPage = () => {\n  const auth = useContext(AuthContext);\n  const message = useMessage();\n  const {\n    loading,\n    request,\n    error,\n    clearError\n  } = useHttp();\n  const [authForm, setAuthForm] = useState({\n    email: '',\n    password: ''\n  });\n  useEffect(() => {\n    message(error);\n    clearError();\n  }, [error, message, clearError]);\n\n  const changeHandler = event => {\n    setAuthForm({ ...authForm,\n      [event.target.name]: event.target.value\n    }); // работаем с оператором spred\n  };\n\n  const registerHandler = async () => {\n    try {\n      const data = await request('http://127.0.0.1:8000/api/v1/registration', 'POST', { ...authForm\n      });\n      console.log(data);\n    } catch (e) {}\n  };\n\n  const loginHandler = async () => {\n    try {\n      const data = await request('http://127.0.0.1:8000/api/v1/login', 'POST', { ...authForm\n      });\n      auth.login(data.token, data.user_id);\n      console.log(data);\n    } catch (e) {}\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s6 offset-s3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card blue-grey lighten-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content white-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"card-title auth-logo-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    type: \"text\",\n    className: \"validate\",\n    name: \"email\",\n    value: authForm.email,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }, \"E-mail\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    className: \"validate\",\n    name: \"password\",\n    value: authForm.password,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn auth-btn-custom\",\n    disabled: loading,\n    onClick: loginHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn auth-btn-custom\",\n    onClick: registerHandler,\n    disabled: loading // Если загрузка пошла, то выключить кнопку\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\")))));\n};","map":{"version":3,"sources":["/Users/zimin/Documents/GitHub/verbal_decision_analytics/frontend/src/pages/AuthPage.js"],"names":["React","useState","useEffect","useContext","useHttp","useMessage","AuthContext","AuthPage","auth","message","loading","request","error","clearError","authForm","setAuthForm","email","password","changeHandler","event","target","name","value","registerHandler","data","console","log","e","loginHandler","login","token","user_id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from \"react\";\nimport {useHttp} from \"../hooks/http.hook\";\nimport {useMessage} from '../hooks/error.hook'\nimport {AuthContext} from \"../context/AuthContext\";\n\nexport const AuthPage =() => {\n    const auth = useContext(AuthContext)\n    const message = useMessage()\n    const {loading, request, error, clearError} = useHttp()\n    const [authForm, setAuthForm] = useState ({\n        email: '', password: ''\n    })\n\n    useEffect(() => {\n        message(error)\n        clearError()\n    }, [error, message, clearError])\n\n    const changeHandler = event => {\n        setAuthForm({...authForm, [event.target.name]: event.target.value })           // работаем с оператором spred\n    }\n\n    const registerHandler = async () => {\n        try {\n            const data = await request('http://127.0.0.1:8000/api/v1/registration', 'POST', {...authForm})\n            console.log(data)\n        } catch (e) {}\n    }\n\n    const loginHandler = async () => {\n        try {\n            const data = await request('http://127.0.0.1:8000/api/v1/login', 'POST', {...authForm})\n            auth.login(data.token, data.user_id)\n            console.log(data)\n        } catch (e) {}\n    }\n\n\n    return (\n        <div className=\"row\">\n            <div className=\"col s6 offset-s3\">\n                <div className=\"card blue-grey lighten-5\">\n                    <div className=\"card-content white-text\">\n                        <span className=\"card-title auth-logo-custom\">Авторизация</span>\n                        <div className=\"input-field\">\n                            <input\n                                id=\"email\"\n                                type=\"text\"\n                                className=\"validate\"\n                                name=\"email\"\n                                value={authForm.email}\n                                onChange={changeHandler}\n                            />\n                                <label htmlFor=\"email\">E-mail</label>\n                        </div>\n\n                        <div className=\"input-field\">\n                        <input\n                            id=\"password\"\n                            type=\"password\"\n                            className=\"validate\"\n                            name=\"password\"\n                            value={authForm.password}\n                            onChange={changeHandler}\n                        />\n                        <label htmlFor=\"password\">Пароль</label>\n                    </div>\n\n                    </div>\n                    <div className=\"card-action\">\n                        <button\n                            className=\"btn auth-btn-custom\"\n                            disabled={loading}\n                            onClick={loginHandler}\n                        >Войти</button>\n                        <button\n                            className=\"btn auth-btn-custom\"\n                            onClick={registerHandler}\n                            disabled={loading}            // Если загрузка пошла, то выключить кнопку\n                        >Регистрация</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}